{
  "hash": "de5d64b2a31f9c8b3e494c4e7bb8bb12",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Fama-MacBeth Regressions\naliases:\n  - ../fama-macbeth-regressions.html\nmetadata:\n  pagetitle: Fama-MacBeth Regressions with R\n  description-meta: Estimate risk premiums via Fama-MacBeth regressions using the programming language R.\n---\n\n\n\n::: callout-note\nYou are reading **Tidy Finance with R**. You can find the equivalent chapter for the sibling **Tidy Finance with Python** [here](../python/fama-macbeth-regressions.qmd).\n:::\n\nIn this chapter, we present a simple implementation of @Fama1973, a regression approach commonly called Fama-MacBeth regressions. Fama-MacBeth regressions are widely used in empirical asset pricing studies. We use individual stocks as test assets to estimate the risk premium associated with the three factors included in @Fama1993.\n\nResearchers use the two-stage regression approach to estimate risk premiums in various markets, but predominately in the stock market. \nEssentially, the two-step Fama-MacBeth regressions exploit a linear relationship between expected returns and exposure to (priced) risk factors. \nThe basic idea of the regression approach is to project asset returns on factor exposures or characteristics that resemble exposure to a risk factor in the cross-section in each time period. \nThen, in the second step, the estimates are aggregated across time to test if a risk factor is priced. \nIn principle, Fama-MacBeth regressions can be used in the same way as portfolio sorts introduced in previous chapters.\n\n\\index{Regression!Fama-MacBeth}\\index{Fama-MacBeth} The Fama-MacBeth procedure is a simple two-step approach: \nThe first step uses the exposures (characteristics) as explanatory variables in $T$ cross-sectional regressions. For example, if $r_{i,t+1}$ denote the excess returns of asset $i$ in month $t+1$, then the famous Fama-French three-factor model implies the following return generating process [see also @Campbell1998]:\n$$\\begin{aligned}r_{i,t+1} = \\alpha_i + \\lambda^{M}_t \\beta^M_{i,t}  + \\lambda^{SMB}_t \\beta^{SMB}_{i,t} + \\lambda^{HML}_t \\beta^{HML}_{i,t} + \\epsilon_{i,t}.\\end{aligned}$$ \nHere, we are interested in the compensation $\\lambda^{f}_t$ for the exposure to each risk factor $\\beta^{f}_{i,t}$ at each time point, i.e., the risk premium. Note the terminology: $\\beta^{f}_{i,t}$ is a asset-specific characteristic, e.g., a factor exposure or an accounting variable. *If* there is a linear relationship between expected returns and the characteristic in a given month, we expect the regression coefficient to reflect the relationship, i.e., $\\lambda_t^{f}\\neq0$. \n\nIn the second step, the time-series average $\\frac{1}{T}\\sum_{t=1}^T \\hat\\lambda^{f}_t$ of the estimates $\\hat\\lambda^{f}_t$ can then be interpreted as the risk premium for the specific risk factor $f$. We follow @Zaffaroni2022 and consider the standard cross-sectional regression to predict future returns. If the characteristics are replaced with time $t+1$ variables, then the regression approach  captures risk attributes rather than risk premiums. \n\nBefore we move to the implementation, we want to highlight that the characteristics, e.g., $\\hat\\beta^{f}_{i}$, are often estimated in a separate step before applying the actual Fama-MacBeth methodology. You can think of this as a *step 0*. You might thus worry that the errors of $\\hat\\beta^{f}_{i}$ impact the risk premiums' standard errors. Measurement error in $\\hat\\beta^{f}_{i}$ indeed affects the risk premium estimates, i.e., they lead to biased estimates. The literature provides adjustments for this bias [see, e.g., @Shanken1992; @Kim1995; @Chen2015, among others] but also shows that the bias goes to zero as $T \\to \\infty$. We refer to @Gagliardini2016 for an in-depth discussion also covering the case of time-varying betas. Moreover, if you plan to use Fama-MacBeth regressions with individual stocks, @Hou2020 advocates using weighted-least squares to estimate the coefficients such that they are not biased toward small firms. Without this adjustment, the high number of small firms would drive the coefficient estimates.\n\nThe current chapter relies on this set of R packages. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(RSQLite)\nlibrary(sandwich)\nlibrary(broom)\n```\n:::\n\n\n\n## Data Preparation\n\nWe illustrate @Fama1973 with the monthly CRSP sample and use three characteristics to explain the cross-section of returns: market capitalization, the book-to-market ratio, and the CAPM beta (i.e., the covariance of the excess stock returns with the market excess returns). We collect the data from our `SQLite`-database introduced in [Accessing and Managing Financial Data](accessing-and-managing-financial-data.qmd) and [WRDS, CRSP, and Compustat](wrds-crsp-and-compustat.qmd).\\index{Data!CRSP}\\index{Data!Compustat}\\index{Beta}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_finance <- dbConnect(\n  SQLite(),\n  \"data/tidy_finance_r.sqlite\",\n  extended_types = TRUE\n)\n\ncrsp_monthly <- tbl(tidy_finance, \"crsp_monthly\") |>\n  select(permno, gvkey, date, ret_excess, mktcap) |>\n  collect()\n\ncompustat <- tbl(tidy_finance, \"compustat\") |>\n  select(datadate, gvkey, be) |>\n  collect()\n\nbeta <- tbl(tidy_finance, \"beta\") |>\n  select(date, permno, beta_monthly) |>\n  collect()\n```\n:::\n\n\n\nWe use the Compustat and CRSP data to compute the book-to-market ratio and the (log) market capitalization.\\index{Book-to-market ratio}\\index{Market capitalization} \nFurthermore, we also use the CAPM betas based on monthly returns we computed in the previous chapters.\\index{Beta}\\index{CAPM}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncharacteristics <- compustat |>\n  mutate(date = floor_date(ymd(datadate), \"month\")) |>\n  left_join(crsp_monthly, join_by(gvkey, date)) |>\n  left_join(beta, join_by(permno, date)) |>\n  transmute(gvkey,\n    bm = be / mktcap,\n    log_mktcap = log(mktcap),\n    beta = beta_monthly,\n    sorting_date = date %m+% months(6)\n  )\n\ndata_fama_macbeth <- crsp_monthly |>\n  left_join(characteristics, join_by(gvkey, date == sorting_date)) |>\n  group_by(permno) |>\n  arrange(date) |>\n  fill(c(beta, bm, log_mktcap), .direction = \"down\") |>\n  ungroup() |>\n  left_join(crsp_monthly |>\n    select(permno, date, ret_excess_lead = ret_excess) |>\n    mutate(date = date %m-% months(1)),\n  join_by(permno, date)\n  ) |>\n  select(permno, date, ret_excess_lead, beta, log_mktcap, bm) |>\n  drop_na()\n```\n:::\n\n\n\n## Cross-Sectional Regression\n\nNext, we run the cross-sectional regressions with the characteristics as explanatory variables for each month. We regress the returns of the test assets at a particular time point on the characteristics of each asset. By doing so, we get an estimate of the risk premiums $\\hat\\lambda^{f}_t$ for each point in time. \\index{Regression!Cross-section}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrisk_premiums <- data_fama_macbeth |>\n  nest(data = c(ret_excess_lead, beta, log_mktcap, bm, permno)) |>\n  mutate(estimates = map(\n    data,\n    \\(x) tidy(lm(ret_excess_lead ~ beta + log_mktcap + bm, data = x))\n  )) |>\n  unnest(estimates)\n```\n:::\n\n\n\n## Time-Series Aggregation\n\nNow that we have the risk premiums' estimates for each period, we can average across the time-series dimension to get the expected risk premium for each characteristic. Similarly, we manually create the $t$-test statistics for each regressor, which we can then compare to usual critical values of 1.96 or 2.576 for two-tailed significance tests. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_of_risk <- risk_premiums |>\n  group_by(factor = term) |>\n  summarize(\n    risk_premium = mean(estimate),\n    t_statistic = mean(estimate) / sd(estimate) * sqrt(n())\n  )\n```\n:::\n\n\n\nIt is common to adjust for autocorrelation when reporting standard errors of risk premiums. As in [Univariate Portfolio Sorts](univariate-portfolio-sorts.qmd), the typical procedure for this is computing @Newey1987 standard errors. We again recommend the data-driven approach of @Newey1994 using the `NeweyWest()` function, but note that you can enforce the typical 6 lag settings via `NeweyWest(., lag = 6, prewhite = FALSE)`.\\index{Standard errors!Newey-West}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nregressions_for_newey_west <- risk_premiums |>\n  select(date, factor = term, estimate) |>\n  nest(data = c(date, estimate)) |>\n  mutate(\n    model = map(data, \\(x) lm(estimate ~ 1, x)),\n    mean = map(model, tidy)\n  )\n\nprice_of_risk_newey_west <- regressions_for_newey_west |>\n  mutate(newey_west_se = map_dbl(model, \\(x) sqrt(NeweyWest(x)))) |>\n  unnest(mean) |>\n  mutate(t_statistic_newey_west = estimate / newey_west_se) |>\n  select(factor,\n    risk_premium = estimate,\n    t_statistic_newey_west\n  )\n\nleft_join(price_of_risk,\n  price_of_risk_newey_west |>\n    select(factor, t_statistic_newey_west),\n  join_by(factor)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 Ã— 4\n  factor      risk_premium t_statistic t_statistic_newey_west\n  <chr>              <dbl>       <dbl>                  <dbl>\n1 (Intercept)    0.0119         4.67                   3.93  \n2 beta           0.0000196      0.0193                 0.0173\n3 bm             0.00146        3.18                   2.73  \n4 log_mktcap    -0.000991      -2.83                  -2.48  \n```\n\n\n:::\n:::\n\n\n\nFinally, let us interpret the results. Stocks with higher book-to-market ratios earn higher expected future returns, which is in line with the value premium. The negative value for log market capitalization reflects the size premium for smaller stocks. Consistent with results from earlier chapters, we detect no relation between beta and future stock returns.\n\nYou can also replicate the results using the `tidyfinace` package via the `estimate_fama_macbeth()` function:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyfinance)\n\nestimate_fama_macbeth(\n  data = data_fama_macbeth, \n  model = \"ret_excess_lead ~ beta + bm + log_mktcap\",\n  vcov = \"newey-west\"\n)\n```\n:::\n\n\n\n## Key Takeaways\n\n- Fama-MacBeth regressions provide a two-step approach to estimate risk premiums by running time-series averages of cross-sectional regressions on asset characteristics.\n- Fama-MacBeth regressions are commonly used in empirical asset pricing to test whether factors like size, value, or market beta are priced in the cross-section of stock returns.\n- Measurement error in factor exposures, especially when estimated beforehand, can bias results, but corrections such as Newey-West standard errors and weighted regressions can improve accuracy.\n- The `tidyfinance` R package provides a user-friendly `estimate_fama_macbeth()` function that simplifies the Fama-MacBeth estimation pipeline.\n\n## Exercises\n\n1. Download a sample of test assets from Kenneth French's homepage and reevaluate the risk premiums for industry portfolios instead of individual stocks.\n1. Use individual stocks with weighted-least squares based on a firm's size as suggested by @Hou2020. Then, repeat the Fama-MacBeth regressions without the weighting scheme adjustment but drop the smallest 20 percent of firms each month. Compare the results of the three approaches. \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}